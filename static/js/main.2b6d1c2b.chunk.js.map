{"version":3,"sources":["img/logo.svg","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","process","ReactGA","initialize","App","props","handleFirstMovie","e","setState","firstMovie","target","value","handleSecondMovie","secondMovie","handleSubmission","preventDefault","console","log","firstMovieRequest","state","secondMovieRequest","firstMovieRenderedCrew","secondMovieRenderedCrew","isHidden","setTimeout","scrollToResults","current","scrollIntoView","behavior","block","a","fetch","then","response","json","movieData","firstMovieData","firstMovieID","results","id","firstMoviePoster","poster_path","firstMovieCreditsRequest","movieCredits","firstMovieCrew","crew","RenderNamesFirstMovie","jobs","forEach","crewMember","includes","job","concat","name","secondMovieData","secondMovieID","secondMoviePoster","secondMovieCreditsRequest","secondMovieCrew","RenderNamesSecondMovie","React","createRef","className","this","src","logo","alt","placeholder","type","onChange","onClick","bind","ref","map","element","Director","Producer","Screenplay","Writer","href","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b6d1c2b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7eabe318.svg\";","import \"./App.css\";\nimport logo from \"./img/logo.svg\";\nimport React, { Component } from \"react\";\nimport ReactGA from \"react-ga\";\n\nconst API_KEY = process.env.REACT_APP_MDB_API_KEY; //Absolutely not secure, consider doing it on a backend Express server for actual API keys that cost money. This one is rate limited and free so it doesn't matter.\n\nconst TRACKING_ID = \"G-YG79K5MB7G\";\nReactGA.initialize(TRACKING_ID);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstMovie: \"\",\n      secondMovie: \"\",\n      firstMovieData: [],\n      secondMovieData: [],\n      firstMovieID: \"\",\n      secondMovieID: \"\",\n      firstMovieCrew: [],\n      secondMovieCrew: [],\n      firstMoviePoster: \"\",\n      secondMoviePoster: \"\",\n      firstMovieRenderedCrew: [],\n      secondMovieRenderedCrew: [],\n      isHidden: true,\n    };\n    this.scrollToResults = React.createRef();\n  }\n\n  handleFirstMovie = (e) => {\n    this.setState({ firstMovie: e.target.value });\n  };\n\n  handleSecondMovie = (e) => {\n    this.setState({ secondMovie: e.target.value });\n  };\n\n  handleSubmission = (e) => {\n    e.preventDefault();\n    console.log(\"Submit was clicked\");\n    this.firstMovieRequest();\n    if (this.state.secondMovie !== \"\") {\n      this.secondMovieRequest();\n    }\n\n    this.setState({\n      firstMovieRenderedCrew: [],\n      secondMovieRenderedCrew: [],\n      isHidden: false,\n    });\n    setTimeout(() => {\n      this.scrollToResults.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"nearest\",\n      });\n    }, 700);\n  };\n\n  firstMovieRequest = async () => {\n    const movieData = await fetch(\n      \"https://api.themoviedb.org/3/search/movie?api_key=\" +\n        API_KEY +\n        \"&language=en-US&query=\" +\n        this.state.firstMovie +\n        \"&page=1&include_adult=yes\"\n    ).then((response) => response.json());\n    this.setState({\n      firstMovieData: movieData,\n      firstMovieID: movieData.results[0].id,\n      firstMoviePoster: movieData.results[0].poster_path,\n    });\n    this.firstMovieCreditsRequest();\n  };\n\n  firstMovieCreditsRequest = async () => {\n    const movieCredits = await fetch(\n      `https://api.themoviedb.org/3/movie/${this.state.firstMovieID}/credits?api_key=${API_KEY}&language=en-US`\n    ).then((response) => response.json());\n    this.setState({\n      firstMovieCrew: movieCredits.crew,\n    });\n    this.RenderNamesFirstMovie();\n  };\n\n  RenderNamesFirstMovie = async () => {\n    let jobs = [\n      \"Director\",\n      \"Producer\",\n      \"Screenplay\",\n      \"Original Music Composer\",\n      \"Costume Design\",\n      \"Director of Photography\",\n      \"Writer\",\n    ];\n    this.state.firstMovieCrew.forEach((crewMember) => {\n      if (jobs.includes(crewMember.job)) {\n        this.setState({\n          firstMovieRenderedCrew: this.state.firstMovieRenderedCrew.concat({\n            [crewMember.job]: [crewMember.name],\n          }),\n        });\n      }\n    });\n  };\n\n  secondMovieRequest = async () => {\n    const movieData = await fetch(\n      \"https://api.themoviedb.org/3/search/movie?api_key=\" +\n        API_KEY +\n        \"&language=en-US&query=\" +\n        this.state.secondMovie +\n        \"&page=1&include_adult=yes\"\n    ).then((response) => response.json());\n    this.setState({\n      secondMovieData: movieData,\n      secondMovieID: movieData.results[0].id,\n      secondMoviePoster: movieData.results[0].poster_path,\n    });\n    this.secondMovieCreditsRequest();\n  };\n\n  secondMovieCreditsRequest = async () => {\n    const movieCredits = await fetch(\n      `https://api.themoviedb.org/3/movie/${this.state.secondMovieID}/credits?api_key=${API_KEY}&language=en-US`\n    ).then((response) => response.json());\n    this.setState({\n      secondMovieCrew: movieCredits.crew,\n    });\n    this.RenderNamesSecondMovie();\n  };\n\n  RenderNamesSecondMovie = async () => {\n    let jobs = [\n      \"Director\",\n      \"Producer\",\n      \"Screenplay\",\n      \"Original Music Composer\",\n      \"Costume Design\",\n      \"Director of Photography\",\n      \"Writer\",\n    ];\n    this.state.secondMovieCrew.forEach((crewMember) => {\n      if (jobs.includes(crewMember.job)) {\n        this.setState({\n          secondMovieRenderedCrew: this.state.secondMovieRenderedCrew.concat({\n            [crewMember.job]: [crewMember.name],\n          }),\n        });\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div\n        className={\n          \"App container relative flex flex-col mx-auto bg-gray-800 text-center text-gray-100  items-center overflow-x-hidden w-screen\" +\n          (this.state.isHidden ? \"h-400\" : \"h-250\")\n        }\n      >\n        <div className=\"h-24 w-24 rounded-full absolute -right-10 -top-10 bg-gray-700\"></div>\n        <div className=\"h-44 w-44 rounded-full absolute -left-20 -top-20 bg-gray-700\"></div>\n        <div className=\"Apptitle my-8 text-lg font-medium tracking-widest text-pink-200\">\n          SCAENA\n        </div>\n        <div className=\"AppSubtitle mt-4 px-24 text-lg font-medium tracking-wide leading-relaxed\">\n          Production Cast for Shows and Movies\n        </div>\n        <div className=\"Searchbox container flex flex-col text-gray-800 bg-white content-center w-11/12 mx-auto my-12 pt-4 rounded-2xl  overflow-hidden\">\n          <div className=\"flex LogoContainer\">\n            <img\n              src={logo}\n              className=\"absolute h-44 -right-4 inset-y-25 transform -rotate-12\"\n              alt=\"Two people watching on a couch watching a movie\"\n            ></img>\n          </div>\n          <div className=\"flex m-2 p-6 pt-24 text-lg font-medium tracking-wide leading-relaxed\">\n            Enter Two Movies\n          </div>\n          <div className=\"SearchItems box-border bg-gradient-to-tr from-pink-400 via-red-200 to-transparent object-cover h-full z-10\">\n            <input\n              placeholder=\"Enter First movie\"\n              className=\"text-center py-2 mt-6 my-4 rounded-2xl bg-gray-800 border border-transparent focus:outline-none focus:ring-2 focus:ring-pink-400 focus:border-transparent placeholder-gray-300 focus:shadow-lg hover:bg-gray-700 text-gray-100\"\n              id=\"movie1\"\n              type=\"text\"\n              value={this.state.firstMovie}\n              onChange={this.handleFirstMovie}\n            ></input>\n            <input\n              placeholder=\"Enter Second movie\"\n              className=\"text-center py-2 my-4 rounded-2xl bg-gray-800 border border-transparent focus:outline-none focus:ring-2 focus:ring-pink-400 focus:border-transparent placeholder-gray-300 focus:shadow-lg hover:bg-gray-700 text-gray-100\"\n              id=\"movie2\"\n              type=\"text\"\n              value={this.state.secondMovie}\n              onChange={this.handleSecondMovie}\n            ></input>\n            <div>\n              <button\n                className=\"GoButton absolute bg-gray-700 hover:bg-gray-600 text-pink-300 font-bold py-2 px-4 rounded-2xl w-16\"\n                type=\"submit\"\n                value=\"Submit\"\n                onClick={this.handleSubmission.bind(this)}\n              >\n                Go\n              </button>\n            </div>\n          </div>\n        </div>\n        {this.state.isHidden ? null : (\n          <div className=\"ResultScreen bg-gray-200 Searchbox container flex flex-col text-gray-800 w-11/12 mx-auto my-12 rounded-2xl\">\n            <div className=\"container grid grid-cols-3 overflow-hidden rounded-2xl \">\n              <div className=\"specialbox bg-gray-800\"></div>\n              <div className=\"overflow-hidden\">\n                <img\n                  src={\n                    \"https://image.tmdb.org/t/p/w200\" +\n                    this.state.firstMoviePoster\n                  }\n                  alt={\"Poster of \" + this.state.firstMovie}\n                ></img>\n              </div>\n              <div className=\"overflow-hidden\">\n                <img\n                  src={\n                    \"https://image.tmdb.org/t/p/w200\" +\n                    this.state.secondMoviePoster\n                  }\n                  alt={\"Poster of \" + this.state.secondMovie}\n                ></img>\n              </div>\n              <div className=\"bg-gray-700 text-gray-200 text-lg font-medium tracking-wide leading-relaxed shadow-none -mt-12 flex justify-center items-center\">\n                CREW\n              </div>\n              <div className=\"\"></div>\n              <div className=\"\"></div>\n              <div\n                className=\"bg-red-200 flex justify-center items-center py-2 text-lg font-medium tracking-wide leading-relaxed\"\n                ref={this.scrollToResults}\n              >\n                Directors\n              </div>\n              <div className=\"flex  flex-col justify-center py-2 text-base font-medium tracking-wide leading-relaxed  text-left pl-0.5\">\n                {this.state.firstMovieRenderedCrew.map((element) => {\n                  if (element.Director) {\n                    return <div className=\"truncate\">{element.Director}</div>;\n                  }\n                })}\n              </div>\n              <div className=\"bg-gray-300 flex justify-center  flex-col py-2 text-base font-medium tracking-wide leading-relaxed text-left pl-0.5\">\n                {this.state.secondMovieRenderedCrew.map((element) => {\n                  if (element.Director) {\n                    return <div className=\"truncate\">{element.Director}</div>;\n                  }\n                })}\n              </div>\n              <div className=\"bg-pink-200 flex justify-center items-center py-2 text-lg font-medium tracking-wide leading-relaxed \">\n                Producers\n              </div>\n              <div className=\"flex flex-nowrap justify-center flex-col py-2 text-base font-medium tracking-wide leading-relaxed text-left pl-0.5\">\n                {this.state.firstMovieRenderedCrew.map((element) => {\n                  if (element.Producer) {\n                    return <div className=\"truncate\">{element.Producer}</div>;\n                  }\n                })}\n              </div>\n              <div className=\"bg-gray-300 flex justify-center flex-col py-2 text-base font-medium tracking-wide leading-relaxed text-left pl-0.5 \">\n                {this.state.secondMovieRenderedCrew.map((element) => {\n                  if (element.Producer) {\n                    return <div className=\"truncate\">{element.Producer}</div>;\n                  }\n                })}\n              </div>\n              <div className=\"bg-red-200 flex justify-center items-center py-2 text-lg font-medium tracking-wide leading-relaxed\">\n                Screenplay\n              </div>\n              <div className=\"flex  flex-col justify-center py-2 text-base font-medium tracking-wide leading-relaxed text-left pl-0.5\">\n                {this.state.firstMovieRenderedCrew.map((element) => {\n                  if (element.Screenplay) {\n                    return <div className=\"truncate\">{element.Screenplay}</div>;\n                  } else if (element.Writer) {\n                    return <div className=\"truncate\">{element.Writer}</div>;\n                  }\n                })}\n              </div>\n              <div className=\"bg-gray-300 flex justify-center  flex-col py-2 text-base font-medium tracking-wide leading-relaxed text-left pl-0.5\">\n                {this.state.secondMovieRenderedCrew.map((element) => {\n                  if (element.Screenplay) {\n                    console.log(\"Screenplay \" + element.Screenplay);\n                    return <div className=\"truncate\">{element.Screenplay}</div>;\n                  } else if (element.Writer) {\n                    return <div className=\"truncate\">{element.Writer}</div>;\n                  }\n                })}\n              </div>\n              <div className=\"bg-pink-200 flex justify-center items-center py-2 text-lg font-medium tracking-wide leading-relaxed\">\n                Composers\n              </div>\n              <div className=\"flex  flex-col py-2 text-base font-medium tracking-wide leading-relaxed text-left pl-0.5\">\n                {this.state.firstMovieRenderedCrew.map((element) => {\n                  if (element[\"Original Music Composer\"]) {\n                    return (\n                      <div className=\"truncate\">\n                        {element[\"Original Music Composer\"]}\n                      </div>\n                    );\n                  }\n                })}\n              </div>\n              <div className=\"bg-gray-300 flex justify-center  flex-col py-2 text-base font-medium tracking-wide leading-relaxed text-left pl-0.5\">\n                {this.state.secondMovieRenderedCrew.map((element) => {\n                  if (element[\"Original Music Composer\"]) {\n                    return (\n                      <div className=\"truncate\">\n                        {element[\"Original Music Composer\"]}\n                      </div>\n                    );\n                  }\n                })}\n              </div>\n              <div className=\"bg-red-200 flex justify-center items-center py-2 text-lg font-medium tracking-wide leading-relaxed\">\n                Costume\n              </div>\n              <div className=\"flex  flex-col py-2 text-base font-medium tracking-wide leading-relaxed text-left pl-0.5\">\n                {this.state.firstMovieRenderedCrew.map((element) => {\n                  if (element[\"Costume Design\"]) {\n                    return (\n                      <div className=\"truncate\">\n                        {element[\"Costume Design\"]}\n                      </div>\n                    );\n                  }\n                })}\n              </div>\n              <div className=\"bg-gray-300 flex justify-center   flex-col py-2 text-base font-medium tracking-wide leading-relaxed text-left pl-0.5\">\n                {this.state.secondMovieRenderedCrew.map((element) => {\n                  if (element[\"Costume Design\"]) {\n                    return (\n                      <div className=\"truncate\">\n                        {element[\"Costume Design\"]}\n                      </div>\n                    );\n                  }\n                })}\n              </div>\n              <div className=\"bg-pink-200 flex justify-center items-center  py-2 text-lg font-medium tracking-wide leading-relaxed\">\n                Photography\n              </div>\n              <div className=\"flex  flex-col py-2 text-base font-medium tracking-wide leading-relaxed text-left pl-0.5\">\n                {this.state.firstMovieRenderedCrew.map((element) => {\n                  if (element[\"Director of Photography\"]) {\n                    return (\n                      <div className=\"truncate\">\n                        {element[\"Director of Photography\"]}\n                      </div>\n                    );\n                  }\n                })}\n              </div>\n              <div className=\"bg-gray-300 flex  flex-col py-2 text-base font-medium tracking-wide leading-relaxed text-left pl-0.5\">\n                {this.state.secondMovieRenderedCrew.map((element) => {\n                  if (element[\"Director of Photography\"]) {\n                    return (\n                      <div className=\"truncate\">\n                        {element[\"Director of Photography\"]}\n                      </div>\n                    );\n                  }\n                })}\n              </div>\n            </div>\n          </div>\n        )}\n        <div className=\"text-center text-white w-screen text-lg font-medium tracking-wide leading-relaxed pb-3\">\n          <a href=\"https://github.com/aindoria\">INDORIA LABS NORTH AMERICA</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}